package dacr.creator

/**
 * 指定されたレコード数分のダミーデータを生成しCSVファイルで出力する。
 * ダミーデータは別途用意するレコード定義ファイルを元に生成する。
 *
 * とりあえずCsvFileクラスにしたが後で変更するかもしれない
 * 1テーブル分のCsvFileを作成担当する
 */
class CsvFile(createRecordCnt: Int) {

    /* 生成するレコード数 */
    var createRecordCnt = createRecordCnt

    /* 1テーブル分のレコード定義リスト。定義がいくつになるかはテーブル次第 */
    //var RecordProperties: ArrayList<RecordProperty>

    /**
     * json形式のレコード定義ファイルを読み込んでレコード毎のプロパティを生成する。
     * 生成したプロパティはリストに保持する
     */
    fun readProperty() {
    }

    /**
     * CSVファイルに出力する
     * ダミーデータは都度作成して一定数ためたらファイルに書き込む
     */
    fun output() {
    }

    /**
     * プライマリキーが複合キーであった場合、ここで生成する。
     * 生成が難しい。
     * 組織など部門コードとチームコードがあってツリー状に有効なコード値が
     * 紐付いている場合、どうやってその整合性を保ったままキーを生成するか。
     * 一番楽なのはそのコード値をマスターとして別途jsonかなんかに定義してもらって
     * それを読み込めばいいだけにする。
     *
     * なお、重複チェックはキーを文字連結してHashMapのキーにすれば良いと思う。
     */
    fun createPK() {
    }
}